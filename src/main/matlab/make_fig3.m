function make_fig3(A, y, cuckoo_idx, splunk_idx, virus_kasp, virus_mcafee, virus_symantec, t_created)

    fold = 2;
    cutoff = .3;
    
    I = cv_part(y, fold, cutoff, 'standard', t_created, cuckoo_idx, splunk_idx, []);
    
    valid = I{1}.training | I{1}.test;
        
    kasp = get_active(virus_kasp);
    mcafee = get_active(virus_mcafee);
    symantec = get_active(virus_symantec);
    
    num_mal = sum(valid & y>0);
    fprintf('Number of malware: %d.\n', num_mal);
    fprintf('kasp fraction detected: %.3f.\n', sum(kasp & valid & y>0)/num_mal);
    fprintf('mcafee fraction detected: %.3f.\n', sum(mcafee & valid & y>0)/num_mal);
    fprintf('symantec fraction detected: %.3f.\n', sum(symantec & valid & y>0)/num_mal);
    fprintf('mcafee or symantec fraction detected: %.3f.\n', sum((mcafee | symantec) & valid & y>0)/num_mal);
    fprintf('mcafee or symantec or kasp fraction detected: %.3f.\n', sum((kasp | mcafee | symantec) & valid & y>0)/num_mal);
    
    h = figure;
    set(h,'Renderer','painters','Position',[100 900 650 200]);

    subaxis(1,3,1,'Margin',0.00,'Padding',-0.00,'PaddingBottom',0.0,'PaddingTop',0.07,'PaddingLeft',0.03,'PaddingRight',-0.00,'MarginBottom',0.15,'MarginLeft',0.04,'MarginRight',0.03,'MarginTop',0.00);
    
    ha = subaxis(1,3,1,1);
    [pred2, pred5] = run(A,y,I, kasp, mcafee, symantec, cuckoo_idx, splunk_idx);
    pos1 = get(gca,'Position');
    annotation(h,'textbox',[pos1(1)-0.07,pos1(2)+pos1(4)+0.02,.1,.05],'String','(A)','fontsize',14,'EdgeColor','none');
    ylabel('TPR');
    xlabel('FPR');

    ha = subaxis(1,3,2,1);
    run2(A,y,I, kasp, mcafee, symantec, cuckoo_idx, splunk_idx);
    pos1 = get(gca,'Position');
    annotation(h,'textbox',[pos1(1)-0.07,pos1(2)+pos1(4)+0.03,.1,.05],'String','(B)','fontsize',14,'EdgeColor','none');
    ylabel('TPR');
    xlabel('FPR');
    
    ha = subaxis(1,3,3,1);
     label_score(y, pred2, pred5);
     pos1 = get(gca,'Position');
     annotation(h,'textbox',[pos1(1)-0.07,pos1(2)+pos1(4)+0.03,.1,.05],'String','(C)','fontsize',14,'EdgeColor','none');
     ylabel('Fraction Detected');
     xlabel('VirusTotal Score');
 
end

function label = get_active(virus)
    
    val = strfind(virus, '<nolabel>'); 
    label = false(size(virus)); 
    for iter=1:length(val) 
        if (isempty(val{iter})) 
            label(iter) = true; 
        end; 
    end;
end

function [pred2, pred5] = run2(A,y,I, kasp, mcafee, symantec, cuckoo_idx, splunk_idx)
    
    [k1, k2, pred2, pred5] = get_roc(A,y,I, kasp | mcafee | symantec, cuckoo_idx, splunk_idx);
    [m1, m2] = get_roc(A,y,I, mcafee | symantec, cuckoo_idx, splunk_idx);
   
    %line_fewer_markers(mean(k1.X) , mean(k1.Y),5, '--sk', 'Spacing', 'logx', 'markersize',5);
    %hold on;
    line_fewer_markers(mean(k2.X) , mean(k2.Y),5, '-sk', 'Spacing', 'logx', 'markersize',5);
    hold on;
    %line_fewer_markers(mean(m1.X) , mean(m1.Y),5, '--xb', 'Spacing', 'logx', 'markersize',5);
    line_fewer_markers(mean(m2.X) , mean(m2.Y),5, '-xb', 'Spacing', 'logx', 'markersize',5);
    hold off;
    
%     legend(...
%         sprintf('AUC=%.2f', mean(k1.AUC)), sprintf('AUC=%.2f', mean(k2.AUC)),...
%         sprintf('AUC=%.2f', mean(m1.AUC)), sprintf('AUC=%.2f', mean(m2.AUC)),...
%         'Location','SouthEast');

    legend(...
             sprintf('AUC=%.2f', mean(k2.AUC)),...
             sprintf('AUC=%.2f', mean(m2.AUC)),...
             'Location','SouthEast');
    
    xlim([0, 0.1]);
    ylim([0, 1.0]);
    set(gca, 'XScale','log', 'XMinorTick','on','YMinorTick','on','TickLength',[0.025 0.025]);
 
end

function [pred2, pred5] = run(A,y,I, kasp, mcafee, symantec, cuckoo_idx, splunk_idx)
    
    [k1, k2, pred2, pred5] = get_roc(A,y,I, kasp, cuckoo_idx, splunk_idx);
    [m1, m2] = get_roc(A,y,I, mcafee, cuckoo_idx, splunk_idx);
    [s1, s2] = get_roc(A,y,I, symantec, cuckoo_idx, splunk_idx);
   
    %line_fewer_markers(mean(k1.X) , mean(k1.Y),5, '--sk', 'Spacing', 'logx', 'markersize',5);
    %hold on;
    line_fewer_markers(mean(k2.X) , mean(k2.Y),5, '-sk', 'Spacing', 'logx', 'markersize',5);
    hold on;
    %line_fewer_markers(mean(m1.X) , mean(m1.Y),5, '--xr', 'Spacing', 'logx', 'markersize',5);
    line_fewer_markers(mean(m2.X) , mean(m2.Y),5, '-xr', 'Spacing', 'logx', 'markersize',5);
    %line_fewer_markers(mean(s1.X) , mean(s1.Y),5, '--^b', 'Spacing', 'logx', 'markersize',5);
    line_fewer_markers(mean(s2.X) , mean(s2.Y),5, '-^b', 'Spacing', 'logx', 'markersize',5);
    hold off;
    
%     legend(...
%         sprintf('AUC=%.2f', mean(k1.AUC)), sprintf('AUC=%.2f', mean(k2.AUC)),...
%         sprintf('AUC=%.2f', mean(m1.AUC)), sprintf('AUC=%.2f', mean(m2.AUC)),...
%         sprintf('AUC=%.2f', mean(s1.AUC)), sprintf('AUC=%.2f', mean(s2.AUC)),...
%         'Location','SouthEast');
    
    legend(...
    sprintf('AUC=%.2f', mean(k2.AUC)),...
    sprintf('AUC=%.2f', mean(m2.AUC)),...
    sprintf('AUC=%.2f', mean(s2.AUC)),...
    'Location','SouthEast');

    
    xlim([0, 0.1]);
    ylim([0, 1.0]);
    set(gca, 'XScale','log', 'XMinorTick','on','YMinorTick','on','TickLength',[0.025 0.025]);
 
end

function [r1, r2, pred2, pred5] = get_roc(A,y,I, virus, cuckoo_idx, splunk_idx)

    r1 = init();
    r2 = init();
    
    A = double(A>0);
    y = double(y>0);

    pred2 = NaN*ones(size(y));
    pred5 = NaN*ones(size(y));

    %do kaspersky plots
    for iter=1:length(I)
        
        I_train = I{iter}.training & (y==0 | virus);
        %I_test = I{iter}.test & (y==0 | virus);
        
        A_train = A(I_train,:);
        y_train = y(I_train);
                
        logit_model = run_pipeline(A_train,y_train);
        %[A_test, y_test] = gen_graft_data(A,y,cuckoo_idx,splunk_idx, I_test, logit_model);            
        %r1 = record_run(A_test,y_test, logit_model, r1);
        
        I_test = I{iter}.test & (y==0 | ~virus);
        
        [A_test, y_test, I_test] = gen_graft_data(A,y,cuckoo_idx,splunk_idx, I_test, logit_model);
        [r2, T02, T05] = record_run(A_test,y_test, logit_model, r2);
        r1 = r2;
        
         if (nargout>2)
            %record the predictions
            pred2(I_test) = logit_model.predict(A_test)>=T02;
            pred5(I_test) = logit_model.predict(A_test)>=T05;
        end
    end

end

 function [h1] = label_score(y, pred2, pred5)

    edges = [.3, .4, .5, .6, .7, .8, .9, 1.0];
    
    val = zeros(2, length(edges)-1);
    s = zeros(2, length(edges)-1);
    for iter=1:(length(edges)-1)
        
        v1 = ~isnan(pred2) & y>edges(iter) & y<=edges(iter+1);
        v2 = ~isnan(pred5) & y>edges(iter) & y<=edges(iter+1);
        
        t2 = pred2;
        t5 = pred5;
        
        t2(~v1) = 0;
        t5(~v2) = 0;
        
        d1 = sum(v1 & t2)/sum(v1);
        d2 = sum(v2 & t5)/sum(v2);
        
        val(2,iter) = d1;
        val(1,iter) = d2;
        
        s(2,iter) = sum(v1);
        s(1,iter) = sum(v2);
    end
    
    v1 = ~isnan(pred5);
    v2 = ~isnan(pred2);
    
    fprintf('TPR for known malware at 0.001 FPR: %.4f\n', sum(y(v1)>1 & pred5(v1))/sum(y(v1)>1));
    fprintf('TPR for known malware at 0.01 FPR: %.4f\n', sum(y(v2)>1 & pred2(v2))/sum(y(v2)>1));

    %val = ones(2,length(edges)-1);
    
   bar(val');
    
  set(gca,'XTickLabel',edges(1:end-1), 'YMinorTick','on','TickLength',[0.025 0.025]);
  ylabel('VirusTotal Score');
  h1 = gca;
  %xlim([edges(1), 1.1]);
  
  %legend('FPR=10^{-2}', 'FPR=10^{-3}','Location','SouthWest' );
  %legend('boxoff');
   
 end

function [base] = init()
    base.X = [];
    base.Y = [];
    base.AUC = [];
    base.AUC_splunk = [];
end

function [base,T02, T05] = record_run(A, y, model, base)

    [X,Y,T,auc] = model.getROCPoints(A, y);
    
    T02 = T(find(X>=.01,1,'first'));
    T05 = T(find(X>=.001,1,'first'));
    AUC_splunk = 0;
    
    base.X(end+1,:) = X;
    base.Y(end+1,:) = Y;
    base.AUC(end+1) = auc;
    base.AUC_splunk(end+1) = AUC_splunk;

end