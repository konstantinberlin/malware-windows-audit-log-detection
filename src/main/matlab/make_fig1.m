function make_fig1(A, y, column_labels, virus, cuckoo_idx, t_created)

    h = figure;
    set(h,'Renderer','painters','Position',[100 900 600 550]);

    subaxis(2,2,1,'Margin',0.0,'Padding',-0.00,'PaddingBottom',0.05,'PaddingTop',0.00,'PaddingLeft',-0.00,'PaddingRight',0.05,'MarginBottom',0.05,'MarginLeft',0.09,'MarginRight',0.00, 'MarginTop',0.05);

    ha = subaxis(2,2,1,1);
    plot_classify(y, virus, cuckoo_idx);
    pos1 = get(gca,'Position');
    annotation(h,'textbox',[pos1(1)-0.09,pos1(2)+pos1(4)+0.00,.1,.05],'String','(A)','fontsize',14,'EdgeColor','none');
    ylim([0, .1]);
    
    ha = subaxis(2,2,2,1);
    plot_dist(y, virus, cuckoo_idx)
    pos1 = get(gca,'Position');
    annotation(h,'textbox',[pos1(1)-0.09,pos1(2)+pos1(4)+0.00,.1,.05],'String','(B)','fontsize',14,'EdgeColor','none');
     ylim([0, .1]);

    
    ha = subaxis(2,2,1,2);
    plot_time(t_created);
    pos1 = get(gca,'Position');
    annotation(h,'textbox',[pos1(1)-0.09,pos1(2)+pos1(4)+0.00,.1,.05],'String','(C)','fontsize',14,'EdgeColor','none');
    
    
    ha = subaxis(2,2,2,2);
    plot_features(A, column_labels);
    pos1 = get(gca,'Position');
    annotation(h,'textbox',[pos1(1)-0.09,pos1(2)+pos1(4)+0.00,.1,.05],'String','(D)','fontsize',14,'EdgeColor','none');

end

 function plot_dist(y, virus, cuckoo_idx)
 
  for iter=1:length(virus)
    %x = strsplit(virus{iter},'.');
    %virus{iter} = lower(x{1});
    %x = strsplit(virus{iter},'-');
    %virus{iter} = lower(x{1});
    
  end
  
  cmp = ~strcmp(virus, '<nolabel>') & ~strcmp(virus, 'Trojan.Win32.Generic');
  virus = virus(cmp);

  %[unique_names,~,z] = unique(virus);
  %d = hist(z,length(unique_names));
    
  %[~,I] = sort(d,'descend');
  %unique_names(I(1:10))

  
  [unique_names,~,z] = unique(virus);
  z = z/length(virus);
    
  %d = hist(max(0, z(y>0 & cuckoo_idx)),length(unique_names));
  
  histogram(z, 50, 'Normalization', 'probability');
  
  set(gca, 'YMinorTick','on', 'XMinorTick','on','TickLength',[0.025 0.025]);
  ylabel('Fraction of Malware Binaries');
  xlabel('Relative Size of Malware Family');
  
 end
 
 function plot_features(A, column_labels)
 
  %idx = false(size(A,2));
  x = strfind(column_labels,',');
  idx = cellfun(@(x)isempty(x), x);
  
  s = sum(A(:,idx)>0,1);
  
  [~,I] = max(s)
  labels = column_labels(idx);
  labels(I)
  s(I)
  g = find(idx);
  sum(A(:,g(I))>0)
  g(I)
  
  val = sort(s,'descend');
  x = 1:length(val);
  
  if (length(x)<1000000)
      x = [1:500, 501:10:10000, 10001:500:100000, 100001:5000:length(val)];  
  else
      x = [1:500, 501:10:10000, 10001:500:100000, 100001:5000:1000000, 1000001:50000:length(val)];  
  end
  
  val = val(x);
  
  %[n,edges] = hist(s,50);
  %n = n/sum(s);  
  
  %bar(edges, n, 'barwidth', 1, 'basevalue', 1.0e-6);
  loglog(x, val, '.');
  %set(gca,'YScale','log')
  
  %histogram(s, 50, 'Normalization', 'probability');
  
  set(gca, 'YMinorTick','on', 'XMinorTick','on','TickLength',[0.025 0.025]);
  ylabel('Number of Occurances');
  xlabel('Popularity Rank');
  
 end
 
 function plot_time(t_created)
 
   t_smallest = round(86400 * (datenum('1995', 'yyyy') - datenum('1970', 'yyyy')));
   t_largest = round(86400 * (datenum('2015', 'yyyy') - datenum('1970', 'yyyy')));

   %adjust so the dates make sense
   t_created(t_created<t_smallest | t_created>t_largest) = 0;
   
   %t_created = t_created(t_created>0);

    d = t_created/86400+datenum('1970', 'yyyy');
  
      histogram(d, 100, 'Normalization', 'probability');
        datetick('x','yy','keeplimits');

      set(gca, 'YMinorTick','on', 'XMinorTick','on','TickLength',[0.025 0.025]);
      ylabel('Fraction of Binaries');
      xlabel('Year Created');
      xlim([datenum('1995', 'yyyy'), datenum('2015', 'yyyy')]);
      ylim([0, .1]);
  
 end
 
function plot_classify(y, virus, cuckoo_idx)
 
  y = y(y>0 & y<=1 & cuckoo_idx);
    
  %d = hist(max(0, z(y>0 & cuckoo_idx)),length(unique_names));
  
  histogram(y, 50, 'Normalization', 'probability');
  
  set(gca, 'YMinorTick','on', 'XMinorTick','on','TickLength',[0.025 0.025]);
  ylabel('Fraction of Classified Binaries');
  xlabel('VirusTotal Score ({\it{s}})');
  
 end