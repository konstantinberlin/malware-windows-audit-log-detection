function [A, y, I] = gen_graft_data(A,y,cuckoo_idx,splunk_idx, I, model)

    good_cuckoo = cuckoo_idx & y==0 & I;
    bad_cuckoo = cuckoo_idx & y>0 & I;
    
    %adjust the cuckoo data
    if (nargin>5)
        
        %figure out positive cuckoo benign features
        good_cuckoo_pop = (sum(A(cuckoo_idx & y==0,:),1)>0.01*sum(cuckoo_idx & y==0, 1)) & sum(A(splunk_idx,:),1)==0;
        
        %now find the ones that also have positive weight
        w = model.getModelWeights();
        
        filter_idx = good_cuckoo_pop & w>0;
        
        fprintf('Found %d cuckoo only features, %d of them with positive weight, forming a total sum of %f.\n', full(sum(good_cuckoo_pop)), full(sum(filter_idx)), full(sum(w(filter_idx))));
        
        A(:,filter_idx) = 0;
    end;
    
    
    splunk = y==0 & splunk_idx & I;
    splunk = find(splunk);
    middle = round(length(splunk)/2);
    bad_splunk = splunk(1:middle);
    good_splunk = splunk((middle+1):length(splunk)); 
    
    if (isempty(bad_splunk))
        error('No splunk data found.');
    end

    bad_other_perm = [];
    while length(bad_other_perm)<length(bad_cuckoo)
        bad_other_perm = [bad_other_perm, bad_splunk(randperm(length(bad_splunk)))];
    end
    bad_other_perm = bad_other_perm(1:sum(bad_cuckoo));

    %
    %     %generate synthetic cuckoo+splunk malware
    A_malware = A(bad_cuckoo,:)+A(bad_other_perm,:);
    A_good = A(good_splunk,:);
    
    %add to the original dataset
    I = [find(bad_cuckoo); good_splunk];
    A  = [A_malware; A_good];
    y = [y(bad_cuckoo); y(good_splunk)];

    A = double(A>0);
    

    
end